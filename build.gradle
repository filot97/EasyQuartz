/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */

buildscript {
	ext {
		springBootVersion = '1.5.6.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

def eclipseSourceFolders=[
	'src/main/java',
	'src/main/resources',	
	'src/test/java',
	'src/test/resources'
];

def projectsNotInEclipse = [/*'no-eclipse-project1','no-eclipse-project2'*/];  

subprojects {
	if (projectsNotInEclipse.contains(project.name)){
		return;		
	}
	
	apply plugin: 'eclipse'
	
	tasks.eclipse.dependsOn << {
		
	for (String sourceFolder: eclipseSourceFolders){ 
		def resourceDir = new File(project.projectDir, sourceFolder)
		if( !resourceDir.exists() && ! resourceDir.mkdirs() ) {
    		logger.info("Not able to create eclipse resource dir: %1",resourceDir);
    	}
	}
	}
	
	eclipse {
	  classpath {
		downloadSources = true // default: true
		downloadJavadoc = false // default: false
	  }
	}
	
	apply plugin: 'java'	
	apply plugin: 'war'	
	apply plugin: 'java-library'
	apply plugin: 'org.springframework.boot'
	//apply plugin: org.springframework.boot.gradle.plugin.SpringBootPlugin	
	apply plugin: 'eclipse-wtp'	
	apply plugin: 'maven'	
	apply plugin: 'pmd'
	
	group = "net.osi"
	version = "0.0.1"
	
	/* Continous integration part - use build number in version when 'ci.buildNumber' is set*/
	def buildNr = System.getenv('ci.buildNumber')
  	if (buildNr != null && ! buildNr.isEmpty()){
		version= version + "_"+buildNr
	}
	
	pmd {
		ignoreFailures = true // 분석결과 예외가 발생하면 빌드실패 발생시키는 것을 제외
		reportsDir = file("${buildDir}/pmd-output")
	}
	
	pmdMain {
		reports {
			xml.destination = file("${pmd.reportsDir}/pmd-report.xml")
			xml.enabled = true
		}
	}
	
	sourceCompatibility = 1.8

	configurations {
		providedRuntime
	}
	
	dependencies {
	   // This dependency is exported to consumers, that is to say found on their compile classpath.
    	api 'org.apache.commons:commons-math3:3.6.1'

    	// This dependency is used internally, and not exposed to consumers on their own compile classpath.
    	implementation 'com.google.guava:guava:23.0'
	
		compile('org.springframework.boot:spring-boot-starter-web')
		compile('org.projectlombok:lombok')
		compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.0')
		compile group: 'net.sourceforge.pmd', name: 'pmd', version: '5.8.1', ext: 'pom'
		providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
		testCompile('org.springframework.boot:spring-boot-starter-test')
	}
}

allprojects{
	repositories {		
		mavenLocal()		
		mavenCentral()
		jcenter()
	}
}